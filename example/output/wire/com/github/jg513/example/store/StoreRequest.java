// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Store.proto
package com.github.jg513.example.store;

import com.github.jg513.webpb.options.FieldOptions;
import com.github.jg513.webpb.options.MessageOptions;
import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;
import com.somewhere.Const;
import javax.validation.constraints.Pattern;
import lombok.Getter;
import lombok.Setter;
import lombok.experimental.Accessors;
import java.util.Collections;

@Getter
@Setter
@Accessors(chain = true)
public final class StoreRequest extends Message<StoreRequest, StoreRequest.Builder> {

    public static final ProtoAdapter<StoreRequest> ADAPTER = new ProtoAdapter_StoreRequest();

    private static final long serialVersionUID = 0L;

    public static final MessageOptions MESSAGE_OPTIONS =
            new MessageOptions.Builder().method("GET").path("/stores/{id}").build();

    public static final FieldOptions FIELD_OPTIONS_ID =
            new FieldOptions.Builder().omitted(true).build();

    public static final FieldOptions FIELD_OPTIONS_EMAIL =
            new FieldOptions.Builder()
                    .javaAnnotations(
                            Collections.singletonList("@Pattern(regexp = Const.EMAIL_REGEX)"))
                    .build();

    public static final Integer DEFAULT_ID = 0;

    public static final String DEFAULT_EMAIL = "";

    public static final Boolean DEFAULT_VALID = false;

    @WireField(
            tag = 1,
            adapter = "com.squareup.wire.ProtoAdapter#INT32",
            label = WireField.Label.REQUIRED)
    private Integer id;

    @WireField(
            tag = 2,
            adapter = "com.squareup.wire.ProtoAdapter#STRING",
            label = WireField.Label.REQUIRED)
    @Pattern(regexp = Const.EMAIL_REGEX)
    private String email;

    @WireField(
            tag = 3,
            adapter = "com.squareup.wire.ProtoAdapter#BOOL",
            label = WireField.Label.REQUIRED)
    private Boolean valid;

    public StoreRequest() {
        super(ADAPTER, ByteString.EMPTY);
    }

    public StoreRequest(Integer id, String email, Boolean valid) {
        this(id, email, valid, ByteString.EMPTY);
    }

    public StoreRequest(Integer id, String email, Boolean valid, ByteString unknownFields) {
        super(ADAPTER, unknownFields);
        this.id = id;
        this.email = email;
        this.valid = valid;
    }

    @Override
    public Builder newBuilder() {
        Builder builder = new Builder();
        builder.id = id;
        builder.email = email;
        builder.valid = valid;
        builder.addUnknownFields(unknownFields());
        return builder;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof StoreRequest)) return false;
        StoreRequest o = (StoreRequest) other;
        return unknownFields().equals(o.unknownFields())
                && id.equals(o.id)
                && email.equals(o.email)
                && valid.equals(o.valid);
    }

    @Override
    public int hashCode() {
        int result = super.hashCode;
        if (result == 0) {
            result = unknownFields().hashCode();
            result = result * 37 + id.hashCode();
            result = result * 37 + email.hashCode();
            result = result * 37 + valid.hashCode();
            super.hashCode = result;
        }
        return result;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        builder.append(", id=").append(id);
        builder.append(", email=").append(email);
        builder.append(", valid=").append(valid);
        return builder.replace(0, 2, "StoreRequest{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<StoreRequest, Builder> {

        public Integer id;

        public String email;

        public Boolean valid;

        public Builder() {}

        public Builder id(Integer id) {
            this.id = id;
            return this;
        }

        public Builder email(String email) {
            this.email = email;
            return this;
        }

        public Builder valid(Boolean valid) {
            this.valid = valid;
            return this;
        }

        @Override
        public StoreRequest build() {
            if (id == null || email == null || valid == null) {
                throw Internal.missingRequiredFields(id, "id", email, "email", valid, "valid");
            }
            return new StoreRequest(id, email, valid, super.buildUnknownFields());
        }
    }

    private static final class ProtoAdapter_StoreRequest extends ProtoAdapter<StoreRequest> {

        public ProtoAdapter_StoreRequest() {
            super(FieldEncoding.LENGTH_DELIMITED, StoreRequest.class);
        }

        @Override
        public int encodedSize(StoreRequest value) {
            return ProtoAdapter.INT32.encodedSizeWithTag(1, value.id)
                    + ProtoAdapter.STRING.encodedSizeWithTag(2, value.email)
                    + ProtoAdapter.BOOL.encodedSizeWithTag(3, value.valid)
                    + value.unknownFields().size();
        }

        @Override
        public void encode(ProtoWriter writer, StoreRequest value) throws IOException {
            ProtoAdapter.INT32.encodeWithTag(writer, 1, value.id);
            ProtoAdapter.STRING.encodeWithTag(writer, 2, value.email);
            ProtoAdapter.BOOL.encodeWithTag(writer, 3, value.valid);
            writer.writeBytes(value.unknownFields());
        }

        @Override
        public StoreRequest decode(ProtoReader reader) throws IOException {
            Builder builder = new Builder();
            long token = reader.beginMessage();
            for (int tag; (tag = reader.nextTag()) != -1; ) {
                switch (tag) {
                    case 1:
                        builder.id(ProtoAdapter.INT32.decode(reader));
                        break;
                    case 2:
                        builder.email(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 3:
                        builder.valid(ProtoAdapter.BOOL.decode(reader));
                        break;
                    default:
                        {
                            reader.readUnknownField(tag);
                        }
                }
            }
            builder.addUnknownFields(reader.endMessageAndGetUnknownFields(token));
            return builder.build();
        }

        @Override
        public StoreRequest redact(StoreRequest value) {
            Builder builder = value.newBuilder();
            builder.clearUnknownFields();
            return builder.build();
        }
    }
}
